Главная Контакты Пожертвования Пасскод Реклама NSFW [...] Pics Adult Pics API Mobile Архив Реквест доски Каталог стикеров Главная Юзердоски Каталог Трекер Настройки Makaba Makaba Verdana Futaba Burichan Muon Neutron Gurochan Навигация /au/ /bi/ /biz/ /bo/ /c/ /em/ /fa/ /fiz/ /fl/ /ftb/ /gd/ /hi/ /hw/ /me/ /mlp/ /mo/ /mu/ /ne/ /po/ /pr/ /psy/ /ra/ /re/ /s/ /sci/ /sn/ /sp/ /spc/ /t/ /tv/ /un/ /w/ /wh/ /wm/ /wp/ /di/ /diy/ /pa/ /p/ /trv/ /cg/ /gb/ /tes/ /v/ /vg/ /a/ /fd/ /ma/ /vn/ /d/ /b/ /fag/ /soc/ /r/ /abu/ /fg/ /fur/ /g/ /ga/ /vape/ /h/ /ho/ /hc/ /e/ /fet/ /sex/ Программирование Создать тред Создать тред Программы и операционные системы обсуждаются в /s/. Воздержитесь от холиваров. Конференция доски в Телеграме - @pr2ch #1s #ai #android #asm #belit #clang #clojure #compsci #cpp #cscript #csharp #d #gamedev #go #haskell #history #ideas #ios #java #javas #javascri #js #naebali #nginx #nodejs #ocaml #php #python #qt #remote #rollout #ruby #rust #scala #seo #sql #vcs #xo Разное /d/ - дискуссии о два.ч /b/ - бред /o/ - оэкаки /soc/ - общение /media/ - анимация /r/ - просьбы /abu/ - здесь живет абу /rf/ - Убежище Политика /int/ - International /po/ - Политика /news/ - новости /hry/ - х р у Тематика /au/ - автомобили и транспорт /bi/ - велосипеды /biz/ - бизнес /bo/ - книги /c/ - комиксы и мультфильмы /em/ - другие страны и туризм /fa/ - мода и стиль /fiz/ - физкультура /fl/ - иностранные языки /ftb/ - футбол /hh/ - hip-hop /hi/ - история /me/ - медицина /mg/ - магия /mlp/ - my little pony /mo/ - мотоциклы /mov/ - Фильмы /mu/ - музыка /ne/ - животные и природа /psy/ - психология /re/ - религия /sci/ - наука /sf/ - научная фантастика /sn/ - паранормальные явления /sp/ - спорт /spc/ - космос и астрономия /tv/ - тв и кино /un/ - образование /w/ - оружие /wh/ - warhammer /wm/ - военная техника и оружие /wp/ - обои и высокое разрешение /zog/ - теории заговора Творчество /de/ - дизаен /di/ - столовая /diy/ - хобби /mus/ - музыканты /pa/ - живопись /p/ - фото /wrk/ - Работа и карьера /trv/ - путешествия Техника и софт /gd/ - gamedev /hw/ - компьютерное железо /mobi/ - мобильные устройства и приложения /pr/ - программирование /ra/ - радиотехника /s/ - программы /t/ - техника /web/ - веб-мастера Игры /bg/ - настольные игры /cg/ - консоли /gsg/ - Grand Strategy Games /ruvn/ - Российские визуальные новеллы /tes/ - the elder scrolls /v/ - video games /vg/ - video games general /wr/ - Текстовые авторские рпг Японская культура /a/ - аниме /fd/ - фэндом /ja/ - японская культура /ma/ - манга /vn/ - визуальные новеллы Взрослым /fg/ - трапы /fur/ - фурри /gg/ - хорошие девушки /ga/ - геи /vape/ - Электронные сигареты /h/ - хентай /ho/ - прочий хентай /hc/ - hardcore /e/ - extreme pron /fet/ - фетиш /sex/ - секс и отношения /fag/ - фагготрия Обратная связь twitter e-mail разбан << Каталог Каталог Навигатор Аноним 23/06/18 Суб 00:19:11 №1215536 Ответ d4RMMFMH4Yo.jpg (24Кб, 500x500) Первый раз здесь? Задавай вопрос в этом треде. Большие куски кода желательно вставлять через ideone или pastebin. Mobile: Android IOS Enterprise: Java C# Go 1С Interpreted: JavascriptPython PHP Ruby Functional: Haskell Lisp OCaml Clojure(Script) Scala System: C ASM C++ Rust Other: Computer Science Нейроночки и МашОб Gamedev Мы вам перезвоним SICP Базы данных Version control Идеи анона Freelance В тред Скрыть Нюфаг-тред Анонемус 20/06/17 Втр 17:04:21 №1008826 Ответ 14958007710430.jpg (746Кб, 2310x2306) F.A.Q.В: У меня горит лаба/курсач, не знаю какую тему диплома взять, хочу войти в айти. О: Задавай вопрос в этом треде. Защиту диплома желательно обсуждать в /un/, а вопросы по web желательно задавать в /web/. В: Какую программу/ось поставить для ... ? О: Связанные с софтом вопросы обсуждаются в /s/. Исключение - IDE и прочие инструменты программирования, которые можно обсудить в тредах соответствующих языков. В: Ко-ко-ко не работает программа. Анон памаги. О: Копируешь сообщение об ошибке в гугл, удаляя номер строки и название файла. Языко- и платформоспецифичные вопросы можешь задать в соответствующем треде. В: Хочу стать программистом, какой язык учить? О: SICP + HTDP. В: Все на английском, нипанятна! О: Тогда 1С. В: Бугурт от собеседований, программировать в 30 лет, съябываем из говнокодинга, обсудить новые рецепты маминого борща. О: Мы вам перезвоним тред - для обсуждения нетехнических околопрограммерских тем. В: Бежать ли мне срочно в node.js, если на него сам PayPal гостевуху перенёс? Начинать ли учить Go и Rust, раз все говорят, что за ними будущее? О: Если интерес не поиграться, а работать, то не нужно следовать за массовыми истериями. Выбирай язык с кучей библиотек, туториалов и проверенными временем фреймворками под твои нужды. Иначе будешь тратить время на велосипеды и поиск багов в чужих пакетах. В: Взломать акк. О: Просто съеби. В: Тред закрыли/пропал, почему? О: Заданные не в том месте вопросы будут утилизированы. В: Подскажите сайтов, которые читают крутые программеры. О: Лента из руби, джавы, скалы и ещё какой-то херни. Литература с пика: http://goo.gl/7aUL3m Подсветка кода для /pr/: https://github.com/ololoepepe/MakabaCode/ Пропущено 497 постов 51 с картинками. В тред Скрыть Пропущено 497 постов, 51 с картинками. Аноним 17/02/19 Вск 22:37:16 №1350074 >>1350060 >Обязательно осваивать E-lisp что бы эффективно работать в Emacs ? Он сам учится по мере роста эффективности. Для начала минимум синтаксиса надо знать, чтобы конфиги править. А так макросы дают гораздо больший буст продуктивности. Для большинства задач, где не хватает макроса, достаточно сохранить его в функцию и немного поправить. Аноним 17/02/19 Вск 22:55:52 №1350089 Аноны, а по екселевскому офису отвечаете? Мне для настольной РПГ нужен генератор "хуйни" по кубикам, но этапов генерации 10 штук, и чтобы сгенерировать допустим 10 "хуйни" а мне нужно больше получается, что нужно забивать 100 ячеек с RANDBETWEEN. Можно как-то объявить в екселе переменную внутри ячейки, которая будет жить только там? Аноним 17/02/19 Вск 23:16:00 №1350109 >>1350074 Чем в обще емакс превосходит Vim? Мне понравилась минималистичность Vim и готовые плагины, но пока нет времени вникать в их различие, но интересно мнение бати юзающего этого монстра(сижу на сублиме). 2019 Back to the Future Аноним 11/01/19 Птн 11:18:52 №1324843 Ответ image.png (1113Кб, 1000x697) Пока вечные вкатывальщики от своей лени расспрашивают в тематик-тредах о том как кастить хеллоуворды в эксепшены, а другие, не менее умные аноны тешат свое самолюбие, отвечая им, имитируя подобие допотопного StackOverflow - мы же в это время попробуем разобрать какие же технологии и языки выстрелят в этом году и что нас ждет в ближайшем будущем. Запрягайте повозки, поехали... Python + Всем давно известно, что никто не хочет писать код ради кода, все хотят в пару строк написать работающее "нечто" и всех это устраивает. Питон проложил свой путь в машинном обучение и подкупает своей простотой и удобством (где не нужно бороться с языком, ради надуманных ограничений, которые матёрому программисту и не нужны). - Великий вдохновитель который дал нам питом таким какой он есть - ушел. И это значит, что сейчас язык поплывет по колдобинам хайпа, благодаря подросшим одноклеточным хиспетрам, как это было в свое время с пхп. Язык с космическим и не "таким как все" синтаксисом, где многие решения из других языков делаются всегда чуток по другому, по своему, по идиотски ограниченно. Несмотря на боль миграции с 2 на 3 версию, даже 3 версия несет еще тучу говно-синтаксиса (и эти люди в свое время со своим вторым питоном смеялись над php 5, лицемеры, у них даже нормального ООП до сих пор нет). В языке, где каждый пробел может повлиять на код, отступы приняты именно в виде пробелов, а не табуляции (и в этом весь питон, ему всегда надо где-то быть нелогичным и идиотским). Rust + Еще одна попытка победить С++. Побеждать С++ надо - это достойная роль. - Сделать язык еще мудренее чем С++, это талант. PHP + Мощный и удобный язык для веба. - Вместо того чтобы делать из языка еще более мощный и удобный инструмент для веба, комьюнити сделало из него джаву, от чего он и стух. Хипстер снова погадил. JavaScript + Абсолютная монополия в браузерах, нередко это первая любовь многих ваннаби-программистов. Отсюда просто бешеная популярность, где на нём теперь пишут даже IDE, которые, что странно - тормозят меньше чем всякие java-IDE. Если твой язык не транслируется в js - то он остой, братюнь! - Превратится в тыкву сразу же, как только потеряет монополию в браузерах. Легион ваннаби-программистов просто не вытянет этот разросшийся пузырь свистелок и перделок. Go + Конкурентный и асинхронный язык без всяких ваших обещаний (промисов) и асинк-авеев. Прост как палка, чем и доставляет. - Если добавить тот факт что дизайн языка говно, то мы сможем смело мастерить поделки из говна и палок (эталон микросервисной архитектуры). Dart + Новая версия, флагманский проект в виде флаттера, кроссмобильная разработка, многие шумят о новой ОС с основой из флаттера. Чудеса! Прям возрождение феникса! - Мертворожденный проект, который пытаются натянуть на глобус, местами синтаксис конечно лучше вашей джавы, но местами видно скрещивание с javascript, что доставляет только боль. Почему нельзя было сделать нормальный си-шарпно-подобный конкурентный (асинхронный) язык на базе технологий языка go - никто не знает. Такое ощущение что всем насрать или гугл просто не умеет в языки. Java + Как говорят - самый популярный язык. Имеет тонну де-факто стандартных решений и некоторое количество хороших IDE, что делает разработку на нём достаточно комфортной (наверное самые удобные инструменты которые я вообще встречал в языках). - COBOL тоже был очень популярен, java еще слышится анону только благодаря мобильной разработки и тырпрайзным конференциям, от которых польза чуть больше чем никакая. Если сама jvm допилена до блеска и порой показывает хорошие результаты в дробилках, то вот многие тырпразные решениях делают как раз ровно наоборот. Если у вас нет машин с дохера-гигибайтными планками ОЗУ и вы не желаете платить дохера зеленых за спринг-дармоедов, которые за месяц делают то, что делает питонист меньше чем за неделю, то джава это не ваше. Scala + Попытка замены джавы. Более богатый синтаксис. Можно пощупать функциональщину. - Приелась джава? Вдруг вы поняли, что CRUD можно писать функционально? Тогда вам точно нужно разбежаться и впечаться об скалу. Groovy + Прикольная попытка сделать еще один динамический язык. - Попытка то прикольная, но зачем на jvm (на сях то эти динамические языки тормозят ппц, а тут жаба-машина). Kotlin + Радость для андроид разработки. Попытка замена джавы. - Опыт с провалом скалы и груви не был убедительным, поэтому авторы сего творения решили накатить очередное ненужное, на не совсем уже нужном jvm. Ведь наше ненужное, самое лучшее из ненужных, как же иначе. Авторы языка пытались сделать ставку на тулинг, позабыв что уже сделали хороший тулинг для джавы, и людей как бы все устраивало. Понятное дело, никаких флагманских проектов, типа кроссплатформенного флаттера нет, но зато есть транслятор в js (а то там у них прокси языков мало) и никому не нужный нейтив (реально хотят потеснить свифт? Серьезно?). Я всегда рад новым языкам и инструментам, но хватит уже таскаться за jvm и пытаться выехать на сомнительном багаже джава наследия (параллельно пытаясь фиксить синтаксические баги джавы, которые надо просто выкинуть). Реально, легиону джавы все хватает, так как тулинг действительно хорош, кому хотелось экзотики, те навернули скалу. И все, больше рыбы там нет. Typescript + Действительно годная альтернатива javascript, хоть какие-то статические типы и вообще ощущение правил в языке и независимость от ваших js стандартов. - Прокси язык (неполноценный), как и паразиты в животном мире - живет ровно до того пока живет хозяин, то есть js. Статические типы для фронтент-программистов нужны так же как пятое колесо мотоциклу, но если такая потребность появляется, то тру-js-кодер всегда накатит всякие babel и flow, и пошлет всех нахер (и будет прав, нахера еще учить 100500 языков у которых сомнительное будущее). Ruby + Местами выглядит удобнее и красивее чем ваши питоны (и продуманнее), может приносит удовольствие автору во время кодинга. - Язык с тонной говномагии и отсуствием вменяемой кросскомпиляции. Поезд хайпа ушел, а ржавые рельсы остались. Haskell, Lisp, OCaml, Clojure, Erlang... + Расширяем кругозор, щупаем ФП. - Когда все детство мама говорила что ты особенный и тетя Оля говорила что ты особенный... а ты пишешь опердени на шестой джаве, то конечно тебе хочется самоутвердиться. Тут то на помощь и приходит вся эта экзотическая херня, но писать на этом говне конечно так же уныло и скучно, поэтому ты тратишь большую часть времени не на код, а на словесные бои в сети, отстаивая проф-пригодность этого хлама. C# + Лучшая джава, но уже не на вашей jvm. - Опять же вирт.машина. Практически ненужная хрень (для тырпрайза). А ведь если бы дали достойную официальную кроссплатформенность в свое время, то джава бы соснула (особенно в те года, когда язык штормило или он стагнировал на одной версии). Увы и пох. С + Созданный умными людьми - востребован почти более 50 лет. Как никогда удобен чтобы поеб..ться с байтами в ограниченных ресурсах. - Мир давно ушел от программ в 10000 строк и писать на таком что-то насыщенное бизнес-логикой - жопа. С++ + Берешь любимый си и приклеиваешь к нему ООП, что может быть лучше? Создавался не хипстерами, поэтому выстрелил и востребован до сих пор. + Наеб..н тысячелетия, пока си стагнировал, умные, но хитрые человеки, придумали что можно завернуть в структуры функции и скормили это народу (придумали ООП). Неожиданно это взлетело, потому как программы действительно писались уже более чем 10000 строк и требовалась хоть какая-то вменяемая инкапсуляция для стада программистов (а потом и этого стало мало, накатили вам джаву). ASM + Когда можешь навернуть байты так, что позавидует Си. - Но так мало кто умеет, да и ненужно. 1С + Великое доказательство того, что технологиями правит бизнес, а не задрот программист в холливар треде. - П..здец. Пропущено 411 постов 37 с картинками. В тред Скрыть Пропущено 411 постов, 37 с картинками. Аноним 17/02/19 Вск 17:00:12 №1349683 >>1349579 Не переживай, мы таких одарённых долго не держим. Аноним 17/02/19 Вск 17:26:00 №1349713 >>1349228 >Но на практике это просто засирает код хуйней типа liftM Лол, засирать лифтами код будет только полный кретин. Нормальные люди оборачивают эту низкоуровневую поебень в функции с удобочитаемыми названиями. Аноним 17/02/19 Вск 23:37:38 №1350120 >>1324860 Пиздец ты конечно Python 3.7.2 /python/ Аноним 22/01/19 Втр 20:32:58 №1332788 Ответ py2.jpg (143Кб, 1000x520) 146892549orig.jpeg (51Кб, 604x604) Не изучай синтаксис, изучай псевдокод и программирование! Коммуна: https://sites.google.com/view/pypry/ Основные книги: https://yadi.sk/d/HQhhsBsq3TVRUq F.A.Q: https://github.com/TheKnightsWhoSayNi/info/wiki/Hat Интерактив шел: https://repl.it/languages/python3 Книги которые ты никогда не прочтёшь: https://yadi.sk/d/tArKKuQu3Kejuq Еще больше книг от уважаемого олда питон-треда:https://yadi.sk/d/H-00n-UG3RSQem всегда доступно по шортлинку йей.рф/книги #python #питон #пайтон прошлый тред: >>1321508 (OP) (OP) Пропущено 167 постов 17 с картинками. В тред Скрыть Пропущено 167 постов, 17 с картинками. Аноним 17/02/19 Вск 20:31:12 №1349954 >>1349945 >джанго Насколько хорошо/подробно? Аноним 17/02/19 Вск 23:34:35 №1350118 >>1349945 >раббитмкью Это разве на ждуна? Очереди конечно просты как палки, но ждуну скорее всего нужно будет только знать команды для отправки\добавления колбека Аноним 17/02/19 Вск 23:36:57 №1350119 >>1350118 Каждый жун занимается деплоем и лично разворачивает на боевом сервере код что пишет. Не задавай тут неудобные вопросы. Что должен знать/уметь/делать профессиональный программист. Аноним 07/02/19 Чтв 16:39:30 №1343451 Ответ image.png (366Кб, 600x600) Сап, аноны. Собираем полный перечень того, что должен знать/уметь/делать профессиональный программист всем программачем. С каждого по несколько пунктов. Я начну: 1. Понимать что такое "программирование"; 2. Иметь руки чуть выше бедер; Пропущено 11 постов. В тред Скрыть Пропущено 11 постов. Аноним 17/02/19 Вск 14:53:27 №1349578 >>1349495 >отправлять как минимум 25% своего кода на stackexchange code review NDA, ёпт, а менять его ради того, чтоб кто-то левый заревьюил - та ещё работка. В нашей тиме ревьюим друг друга сами в мердж-реквестах. Также предпочитаю на stackexchange сам ревьюить, нежели выкладывать свой код. Аноним # OP 17/02/19 Вск 22:39:43 №1350077 Оживляем тред, аноны. Если не будете токсичными - будет годное наставление зеленым. Ну же! Аноним 17/02/19 Вск 23:33:18 №1350117 >>1343451 (OP) Выполнять то, что от него требует работодатель. в пределах разумного C Programming Language #39 /clang/ Аноним # OP 02/02/19 Суб 02:46:14 №1339788 Ответ C Programming L[...].png (78Кб, 792x1023) Тред, посвященный прародителю всех С-подобных языков и по совместительству единственному идеальному и всесторонне годному средству программирования как на системном, так и на прикладном уровне. Пожалуйста, пользуйтесь https://ideone.com/ или https://pastebin.com/ для вставки кода, если он длиной больше нескольких строк или содержит [i] или ∗. Что читать: - Brian Kernighan, Dennis Ritchie "The C Programming Language": http://www.cypress.com/file/56651/download - Stephen Prata "C Primer Plus, 6th Edition" (2014): относительно свежая, знает про C89/C99/C11, описывает различия, объемная (около тысячи страниц), годная, с вопросами, упражнениями и ответами. Читать после K&R или до. - Zed A. Shaw "Learn C the Hard Way" (2015): годное пособие для гуманитариев для гуманитариев! - Немного примеров хорошего стиля: http://www.oualline.com/books.free/style/index.html - ООП, например: http://www.cs.rit.edu/~ats/books/ooc.pdf - Стандарт ISO/IEC 9899:1999 (он же C99): http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf (драфт) - Стандарт ISO/IEC 9899:2011 (он же C11): http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf (драфт) - man/Dash/zealdocs Чем компилировать: - Очевидный GCC. - clang: оче годно, батя рекомендует. - Intel C++ Compiler: оптимизации, тысячи их. - Visual Studio 2017 Community Edition: внезапно этим стало можно пользоваться, особенно с тулсетом clang/C2. Поддержка C11 на уровне "есть все, что тебе понадобится в реальном проекте плюс кривая библиотека". Анализатор кода в комплекте. - Pelles C (шиндоуз онли): поучиться, вкатиться в C11 (стандарт полностью реализован, имеются в том числе threads.h и прочие stdatomic.h), но количество багов в оптимизаторе и редкие апдейты напрочь отбивают желание собирать этим что-то сколько-нибудь серьезное. - TCC: очень маленький компилятор с багами и поддержкой C99. С ключом -run умеет компилировать код в память и запускать его, что позволяет писать скрипты прямо на сишечке. Что еще почитать: http://c-faq.com/ FAQ из comp.lang.c. Древний, но все еще актуален. Samuel P. Harbison, Guy L. Steele Jr. "C: A Reference Manual, 5th Edition" (2002) Ебаный пересказ стандартов C89 и C99 (включая стандартную библиотеку). Для не осиливающих стандарт в оригинале. Читать в качестве подготовки к собеседованиям (есть задачник с ответами) и для ознакомления с масштабами пиздеца перед написанием своего парсера/компилера. Peter Van Der Linden "Expert C Programming. Deep C Secrets" (1994) "Си: грязные истории". Смехуечки, немного объяснений, чем обусловлены особенности языка, всем известные подводные камни кто там ругал косяки в JS? у нас в сишечке их гораздо больше, просто они лучше спрятаны, немного байтоебли и непонятно откуда взявшаяся глава про старинные плюсы. Читать в качестве сказки на ночь (на пару вечеров хватит). Richard M. Reese "Understanding and Using C Pointers. Core Techniques for Memory Management" (2013) - почитать, вкатиться в указатели. Ben Klemens "21st Century C: C Tips from the New School" (2012) Paul Deitel, Harvey Deitel "C for Programmers with an Introduction to C11" (2013) Stephen G. Koch@n "Programming in C (3rd Edition или 4th Edition, если найдется)" (2014) MISRA Ltd. "Guidelines for the Use of the C Language in Critical Systems" (2013) Набор рекомендаций по написанию надежного кода на C (промышленный стандарт). Читать - однозначно, следовать - вдумчиво и без фанатизма. Также можно посмотреть https://www.securecoding.cert.org/confluence/display/c/SEI+CERT+C+Coding+Standard Еще более длинный список: http://www.iso-9899.info/wiki/Books#Learning_C Онлайн-утилиты: - https://godbolt.org/ - Compiler Explorer позволяет посмотреть выхлоп компиляторов для введенного куска кода (больше полусотни разных версий компиляторов). - http://cdecl.org/ - С Gibberish ↔ English помогает читать сложные сишные декларации. Прошлые треды: - №36: https://arhivach.ng/thread/407257/ - №37: https://arhivach.ng/thread/414099/ - №38: https://arhivach.ng/thread/419611/ Пропущено 456 постов 35 с картинками. В тред Скрыть Пропущено 456 постов, 35 с картинками. Аноним 17/02/19 Вск 22:40:45 №1350078 Capture - Copy.PNG (85Кб, 1232x941) >1960 >Массив - ссылочный тип. >2019 >Javamakaka: си устарел >Java: массив - ссылочный тип Аноним 17/02/19 Вск 23:02:30 №1350096 >>1350078 Я правильно понял, что твоя функция берет аррей и умножает каждое число в нем на три? Учусь читать код. Аноним 17/02/19 Вск 23:30:59 №1350116 >>1350096 Учись не читать код, а кодить, это ведь элементарщина. мимо МЫ ВАМ ПЕРЕЗВОНИМ #199 /xo/ Аноним # OP 17/02/19 Вск 19:38:58 №1349892 Ответ d04ec36f6a51181[...].jpg (151Кб, 1417x920) МЫ ВАМ ПЕРЕЗВОНИМ #199 Вкатываемся в 30 лет, конкурируем с 24-летними синьорками, становимся синьорами без помощи менторов, доказываем, что вкатились за идею и ждем, когда нам перезвонят https://www.indeed.com/ - тут ищи работу https://github.com/jwasham/coding-interview-university - тут готовься к собесу (теория) https://www.topcoder.com/ - тут готовься к собесу (практика) Предыдущий >>1348435 (OP) Пропущено 101 постов 4 с картинками. В тред Скрыть Пропущено 101 постов, 4 с картинками. Аноним 17/02/19 Вск 23:19:52 №1350112 >>1350111 Ну так вопросы к бекерам криворуким. На весту фронт норм натянули и понеслась в лидеры продаж сминая корейцев, которые так же рынок захватывали. Аноним 17/02/19 Вск 23:26:21 №1350114 >>1350103 >>1350112 Но UI делают дизайнеры, а не js-макаки. Аноним 17/02/19 Вск 23:27:30 №1350115 >>1350114 А UX жсники. А то это одни и те же люди. JavaScript thread Number(`125`); /js/ @frontend_u # OP 17/02/19 Вск 22:44:26 №1350080 Ответ js.png (61Кб, 1050x1050) react.jpg (69Кб, 600x313) fronturiere.jpg (122Кб, 940x803) stringdriven.jpg (140Кб, 723x666) Прошлый тред: >>1336498 (OP) НЕ КОПИРУЙ КОД ПРЯМО В ТРЕД! Для программирования на ХТМЛ https://codepen.io/pen/ Для фреймворков https://codesandbox.io/ Для Ноды с пакетами https://repl.it/languages/nodejs Залить, задеплоить страничку, сервер, контейнер https://zeit.co/now Аноны, хочу получить советов мудрых, высераю пару предложений и код на скриншоте, а получаю смехуёчки. Как быть? Если рассчитываешь получить дельный ответ, формулируй правильно вопрос: что я хочу получить, что я для этого делаю, что я вместо этого получаю. Сделай песочницу по ссылкам выше для ясности и удобства. Если когда самостоятельно найдёшь решение — поделись в треде, мы за тебя переживаем. В тред Скрыть Аноним # OP 17/02/19 Вск 22:45:43 №1350081 П Л А Т И Н А > Странное приведение типов, комплексные правила, неявные ошибки Язык разрабатывался с расчётом на доступность Веба для авторов любого вида. Даже плохой код должен хоть как-то работать. А тебя не обязывает всеми этими странностями пользоваться. > Почему бы не сделать нормальную версию языка Выгоды сомнительны, а Веб ломать нельзя. http://exploringjs.com/es6/ch_one-javascript.html > Динамика, не компиляется, недоязык Странно, что у тебя после объявления всех типов и компиляния осталось время покакать в этом треде, старичок. > Что там и когда происходит в этом одном потоке Event Loop https://www.youtube.com/watch?v=8cV4ZvHXQL4 https://www.youtube.com/watch?v=j4_9BZezSUA > Я могу сделать запрос с сервера к чужому АПИ, почему с клиента такой запрос не работает Для твоей безопасности в браузерах принудительно работает ограничение доступа к кросс-доменным ресурсам https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS > Хочу получить доступ к файлам на винте Тебе бы не хотелось сидеть в таком Вебе, где произвольный сайт может получить доступ к твоим файлам. https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications В К А Т И Т Ь С Я Возраст, пол, образование не имеют решающего значения. Времени потребуется год с нуля, но это не точно. https://ru.hexlet.io/blog/categories/success https://medium.freecodecamp.org/inspirational-success-stories-from-self-taught-web-developers-4f6f375cf17d Английский обязательно. Проследуй в /fl за гайдом. Учись учиться. https://www.youtube.com/watch?v=5MgBikgcWnY https://www.youtube.com/watch?v=vd2dtkMINIw https://www.youtube.com/watch?v=IhuwS5ZLwKY&list=PL8dPuuaLjXtNcAJRf3bE1IJU6nMfHj86W Ты помнишь образы и связи, а не конспекты. https://www.youtube.com/watch?v=gj3ZnKlHqxI https://www.youtube.com/watch?v=5nTuScU70As Ты — это то, что ты делаешь каждый день. https://www.youtube.com/watch?v=eLYNM5QAnpw https://www.youtube.com/watch?v=JAnNUhWJQI8&list=PL5faAYlGYYoGr49h1WMInNSd5Ya1uu7KT&index=6 https://habitica.com/ Сколько помидорок сможешь сделать за неделю? https://www.youtube.com/watch?v=H0k0TQfZGSc https://pomotodo.com/ Математика. Не принципиально, но очень прокачивает. https://www.khanacademy.org/math HTML, CSS. Ничего сложного. Требует только усидчивости. Как раз подойдёт для того, чтоб в простых условиях выработать правильные привычки и дисциплину. Проходи вёрстку на https://htmlacademy.ru/courses Бесплатного будет достаточно, но можно и подписку купить на месяц, этот дедлайн мотивирует. В Кокодемии тебе будут показывать всякие теги, правила. Ты дополнительно находи каждый на https://developer.mozilla.org/en-US/ (в результатах поиска справа категории, оставь пока только HTML, CSS) В этой “вики”-документации описаны подробности для всякого в Вебе. Тебе не надо учить это всё наизусть. Достаточно просто бегло ознакомиться, пропитываться, иметь представление. В каждой статье есть раздел “Specification”, там тебя чаще всего интересует ссылка “Living standard”. Это спецификации языка, “спеки”, они написаны очень формально. В начале всё будет совсем не понятно, это норма. Тебе просто надо привыкать к подобным документам. Поглядывай их немного, типа шаришь. Можно найти ещё много полезностей, типа https://htmlreference.io/ https://cssreference.io/ Параллельно с Кокодемией по вечерам посмотри: https://www.youtube.com/watch?v=Sy_wba7l1UU&list=PLawfWYMUziZqyUL5QDLVbe3j5BKWj42E5 https://www.youtube.com/watch?v=tpIctyqH29Q&list=PL8dPuuaLjXtNlUrzyH5r6jN9ulIgZBpdo На этом этапе стоит начать формировать информационный фон. Собирай подписки на рассылки, Ютюб, Твиттер. Но помни, если ты что-то смотришь-читаешь, то стоит потратить минимум столько же времени на написание кода по мотивам. Иначе это обычная бестолковая прокрастинация. Или же это может быть толковая рекреация — лучше посмотреть интересный доклад, чем очередной сериал. Javascript. Шутки кончились. https://www.youtube.com/watch?v=rrRZZ_3licM&list=PLo6puixMwuSMIB7x6MNBTNQA3P3Mqo_33 Очень дружелюбен к ньюфаням: https://javascript.info/ У него есть предыдущая версия на русском, но она безнадёжно устарела. Здесь среди прочего описываются многие тонкости языка, которые полезны для общей картины, но на деле вряд ли пригодятся, не фрустрируй. Задачки обязательно делать; если задачка совсем (за 10 минут) не получается, то прилежного разбора и воспроизведения готового решения будет вполне достаточно. Искать каждый раз подробности на MDN ты уже имеешь привычку, не забывай пользоваться. Теперь тебя интересует Draft в спеках. Как писать для людей: https://github.com/ryanmcdermott/clean-code-javascript Ссылкота по понятиям: https://github.com/leonardomso/33-js-concepts Тут уже можно начать искать работку и получать опыт. Удача любит смелых. Но не ври о своём уровне работодателю, а главное — себе. Если ещё есть время и хочется подробностей, повторений, закреплений, то https://www.freecodecamp.org/ годнота, интерактивно обозревает всё, плюс обзор некоторых приблуд, идеи проектов для портфолио, задачки на алгоритмы. Подготовка к собеседованию, задачки, соревнования: https://codesignal.com/ Концептуальный разбор, полезное чтиво: https://github.com/getify/You-Dont-Know-JS https://github.com/getify/Functional-Light-JS Исчерпывающе подробные справочники: http://speakingjs.com/es5/index.html http://exploringjs.com/es6/index.html http://exploringjs.com/es2016-es2017/index.html http://exploringjs.com/es2018-es2019/toc.html Массивная ссылкота по всем темам: https://frontendmasters.com/books/front-end-handbook/2018/ Дизайн, редактура, прочие смежные дела: https://bespoyasov.ru/front-not-pain/ Node.js позволит тебе вырваться за пределы браузера, сделать свой сервер, автоматизировать рутину в разработке и жизни: https://www.youtube.com/watch?v=fBNz5xF-Kx4 https://www.youtube.com/watch?v=C7TFgfY7JdE https://medium.freecodecamp.org/the-definitive-node-js-handbook-6912378afc6e https://www.youtube.com/watch?v=G8uL0lFFoN0 https://www.youtube.com/watch?v=o3ka5fYysBM Нода это уже отдельная среда, человечного MDN’a тут нет. Но ты же уже не боишься серьёзных документаций. Нужно найти доки Ноды “nodejs api” и сверяться с ними. Где-то на этом этапе ещё нужно разобраться с Linux https://itsfoss.com/getting-started-with-ubuntu/ https://linuxjourney.com/ shell https://tproger.ru/translations/bash-cheatsheet/ https://explainshell.com/ https://www.shellscript.sh/ Git https://tproger.ru/translations/difference-between-git-and-github/ https://githowto.com https://git-scm.com/book/ru/v2 Docker https://docs.docker.com/install/ https://training.play-with-docker.com/beginner-linux/ https://blog.risingstack.com/how-to-debug-a-node-js-app-in-a-docker-container/ Приложение. Всё по-взрослому. Теперь пора делать что-то серьёзное, применять на практике. Имеется множество готовых приблуд, можно делать приложения любой сложности. В качестве идеи для проекта стоит брать что-то близкое тебе, чтоб с душой. Можно воспроизвести используемое тобой приложение. Можно сделать что-то полезное тебе в быту — учёт просмотренных тайтлов, счётчик калорий, агрегатор новостей. Писать здесь гайды к каким-то приблудам нет никакого смысла, так как каждая вполне достойна отдельного треда и имеет свой сайт, где с гайдами постарались. Жизнь готовила тебя к этому, ты сможешь разобраться самостоятельно. Алгоритм такой: 0 - находишь на Ютюбе любой обзорный видос, чтоб страх неизвестного пропал; 1 - находишь официальный сайт приблуды; 2 - на офсайте делаешь Tutorial / Getting started; 3 - на офсайте читаешь доки, АПИшки по диагонали; 4 - начинаешь делать оригинальные нужные штуки, сверяясь с доками; 5 - попробуй поискать “github awesome приблуда”; 6 - отважно посмотри исходники. Сейчас с большим отрывом самый популярный стек это React + Express + Mongo. Получается что-то такое: https://www.youtube.com/watch?v=PBTYxXADG_k&list=PLillGF-RfqbbiTGgA77tGO426V3hRF9iE Оформи такое в портфолио на Гитхабе и можешь уверенно искать работку. А как же другие приблуды? Сложно и долго осилить только первый язык, фреймворк, что-либо. Следующий ты освоишь в считанные недели, а то и дни. При перекате не забудь тему и тег. Шапка с разметкой: https://pastebin.com/CUeaY92u Аноним 17/02/19 Вск 23:23:07 №1350113 Первый C#/Сисярп/.NET Тред - Школоло эдишн #3 /csharp/ Аноним 26/01/19 Суб 18:20:18 №1335434 Ответ image.png (185Кб, 337x450) image.png (83Кб, 2048x1024) image.png (1278Кб, 720x1096) В: Чо учить? О: https://metanit.com/sharp/tutorial/ В: Где писать? О: Visual studio для спермачей, vs code для линуксо бояр. В: РЯЯЯ Почему моего вопроса нет в шапке? О: Ну создай свою шапку и перекат блять Блять, почему никто за 100 с чем-то постов овер бамплимит не сделал перекат? Я уже про сисярп и забыл, просто зашел на двач, а мой тред все еще живет. Пропущено 276 постов 16 с картинками. В тред Скрыть Пропущено 276 постов, 16 с картинками. Аноним 17/02/19 Вск 22:26:38 №1350056 cde.png (5Кб, 271x213) >>1350046 А не пиздишь? Аноним 17/02/19 Вск 23:05:39 №1350101 >>1350056 И правда. Напиздел, но не совсем! Почему-то bool не могу в переменную положить, а инты могу. Аноним 17/02/19 Вск 23:16:26 №1350110 >>1350101 Можешь, главное верь в себя и используй правильные типы. Clojure(Script) тред #2 /clojure/ Аноним 05/02/19 Втр 18:27:47 №1342400 Ответ Clojurelogo.svg.png (88Кб, 1200x1200) 15218225208681.png (50Кб, 753x661) 15398017743450.png (150Кб, 834x739) 5b0619220a92d39[...].jpeg (40Кб, 400x400) ; Добро пожаловать в очередной тред самого высокооплачиваемого языка в мире! (swap! threads update-in [:clojure :count] inc) Кто использует clojure в продакшне? Сбербанк, Walmart, CircleCI, Heroku, Puppet, Netflix, Soundcloud, Spotify, Facebook, Groupon, Red Hat, Oracle. Какие приложения написаны на clojure? Walmart eReceipts - бэкенд обработки данных о покупках во всех отделениях Walmart для их мобильного приложения. https://www.datomic.com - распределенная транзакционная база данных с языком запросов на основе datalog. http://status.im/ - мобильная блокчейн ОС на основе Ethereum'а и тулкит для создания p2p-приложений. http://lighttable.com - расширяемая интерактивная IDE для clojure, python и javascript. https://precursorapp.com - инструмент для коллективного прототипирования онлайн (рекомендую попробовать, зависимость есть). http://circleci.com - Continuous Integration and Delivery. Бэкенд и фронтенд на clojure+clojurescript. http://braid.chat/ - более лучший слак, опенсорсный и с историей (альфа). http://putchar.org/ - реддит здорового человека (автор постит кучу интересных ссылок; алсо, код выложен на гитхабе). http://maria.cloud/ - интерактивная онлайн-IDE для обучения программированию. TL;DR Начать: http://maria.cloud/ Читать: https://www.braveclojure.com Решать: http://www.4clojure.com Онлайн: https://repl.it/site/languages/clojure Офлайн: https://leiningen.org Зомби: http://www.parens-of-the-dead.com/ https://clojure.org/guides/getting_started https://clojure.org/reference/documentation https://github.com/bbatsov/clojure-style-guide Clojurescript https://clojurescript.org https://figwheel.org https://github.com/Day8/re-frame Документация https://clojuredocs.org/ https://clojure.org/api/cheatsheet && https://cljs.info/cheatsheet/ https://clojure.org/reference/documentation Задачи http://www.4clojure.com http://clojurekoans.com http://clojurescriptkoans.com http://exercism.io/languages/clojure/about Видео https://github.com/tallesl/Rich-Hickey-fanclub#talks https://www.youtube.com/user/ClojureTV Комьюнити https://www.reddit.com/r/Clojure/ https://clojureverse.org/ http://clojurians.slack.com/ #clojure@irc.freenode.net https://groups.google.com/forum/#!forum/clojure https://stackoverflow.com/questions/tagged/clojure Блоги Еженедельник: https://therepl.net Все блоги: http://planet.clojure.in Производительность: http://clojure-goes-fast.com IDE https://cursive-ide.com https://cider.readthedocs.io/en/latest http://lighttable.com http://nightcoders.net https://sekao.net/nightcode && https://sekao.net/lightmod Библиотеки https://clojars.org && https://www.clojure-toolbox.com Web: http://www.luminusweb.net || https://github.com/weavejester/compojure App Server: http://immutant.org || http://aleph.io || http://http-kit.org/ DI: https://github.com/weavejester/integrant || https://github.com/stuartsierra/component || https://github.com/tolitius/mount SQL: https://github.com/layerware/hugsql || https://walkable.gitlab.io UI (cljs): https://github.com/Day8/re-frame || https://github.com/omcljs/om || https://github.com/tonsky/rum HTML: https://github.com/weavejester/hiccup Macros: https://github.com/cgrand/macrovich Spec: https://github.com/bhb/expound && https://github.com/jeaye/orchestra Test: https://github.com/clojure/test.generative && https://github.com/bensu/doo (cljs) FAQ — СКОБКИ!!11 http://clochure.org/ — Кейворды?.. https://clojure.org/guides/faq#why_keywords — Common Lisp же есть, нинужна!!1 Просто съеби. — Что нужно для вкатывания? Знать английский, не быть тупым, иметь опыт программирования. — Хочу начать изучать программирование, clojure мне подойдет? Лучше сперва возьми PLT Racket и читай SICP + http://htdp.org — Обязательно знать джаву и жс? На уровне чтения документации. — Как без классов представлять бизнес-сущности? Используй хэшмапы, namespaced keywords и spec. Не поддавайся искушению создавать рекорды на каждый чих. Все есть данные. — Что по скорости? Зависит от задачи. В среднем - медленнее скалы, быстрее рубипитонов. — Печатаю элементы последовательности, а они не печатаются, ЧЯДНТ? Ленивость + сайд-эффекты => используй doall или dorun. — Итерируюсь по большой последовательности и получаю OutOfMemoryException, ЧЯДНТ? https://clojure.org/reference/lazy#_don_t_hang_onto_your_head — DSL - круто! Можно теперь все API делать на макросах? The first rule of macro club is: "Don't write macros". — Че там по пост-иронии? https://www.youtube.com/watch?v=jlPaby7suOc — Батя одобряет? Да: https://www.youtube.com/watch?v=-ktUXFxkSkI&t=25m25s Пропущено 162 постов 15 с картинками. В тред Скрыть Пропущено 162 постов, 15 с картинками. Аноним 17/02/19 Вск 22:45:48 №1350082 >>1350070 Но тогда получается, что CL - не лисп. Аноним 17/02/19 Вск 23:03:52 №1350097 >>1350082 С чего это вдруг? БНФ как я понял использовалась в ранних версиях Лиспа. Сейчас повсеместно прижился другой синтаксис. Но семантика осталась прежней. Аноним 17/02/19 Вск 23:10:39 №1350105 >>1350065 >а анон, ты слился уже, причем в двух разных дискуссиях Ты хочешь сказать, что этот ИТТ тхреад не состоит из семенов студентоты без опыта чуть менее, чем полностью? Аргументы-то про кложу для риал-ворлд, это примерно как Генту в дата центрах. Пруверов тред #2 Аноним # OP 16/02/19 Суб 16:14:38 №1348837 Ответ leanlogo2.png (10Кб, 963x300) Coq logo.png (6Кб, 66x100) We can prover it.jpg (64Кб, 600x439) Тред успешных хлебателей борщей. Возрождённый. Coq: https://coq.inria.fr/ Lean: http://leanprover.github.io/ Agda: https://github.com/agda/agda HoTT: https://github.com/HoTT/HoTT https://github.com/HoTT/HoTT-Agda https://github.com/gebner/hott3 По теме: http://groupoid.space/. Cubical Type Theory: https://github.com/mortberg/cubicaltt https://github.com/mortberg/yacctt https://github.com/RedPRL/redtt https://github.com/redprl/sml-redprl https://github.com/JetBrains/Arend Ну и agda --cubical. По теме: http://cubical.systems/ Пропущено 29 постов 2 с картинками. В тред Скрыть Пропущено 29 постов, 2 с картинками. Аноним 17/02/19 Вск 22:32:22 №1350064 >>1349984 + Аноним 17/02/19 Вск 22:36:21 №1350071 >>1349194 >И что их даже не беспокоит гарантированный туннельный синдром. Надвно смотрел серию видосиков по погромированию, где чувак писал в каком-то непопулярном редакторе, и иногда открывал емакс. А в одном видосе он сидел в каких-то ортопедических перчах и тут я заржал знаю, грешно Хороший мем, кароче Аноним 17/02/19 Вск 22:42:14 №1350079 >>1350051 Да что-то как-то неубедительно, мне не нужно смотреть на клавиатуру, чтобы найти стрелки. Очередной тред про лучший в мире язык GO /go/ Аноним 22/12/18 Суб 13:28:26 №1314918 Ответ image.png (1906Кб, 1147x1180) image.png (764Кб, 900x1400) image.png (93Кб, 300x293) Go (а также Golang, Пщ или просто Го) — современный язык с зелеными потоками на уровне синтаксиса и крутой стандартной библиотекой. Так как делать пакеджи несложно, гитхаб полон пакеджами для абсолютно всего. Батарейки почти как в питоне. Пщ едва не единственный язык который на уровне синтаксиса позволяет синхронизировать подпрограммы, разве только не Pony или Erlang. Это в 2018 году-то. Дженериков нет, просто смирись. Обработка ошибок получается охуенно через http://github.com/pkg/errors | в приложениях обычно можно просто паниковать на ошибках. HTTP-сервер для убер максимального маня-хайлоада: https://github.com/valyala/fasthttp С версии Go 1.11 наконец-то появится официальный менеджер зависимостей vgo https://github.com/avelino/awesome-go - список всяких разных пакетов, написанных на Go. Для вката в Go читай Донован, Керниган "Язык программирования Go", https://www.golang-book.com/, книги из списка https://github.com/dariubs/GoBooks, а также смотрим видео https://www.youtube.com/channel/UC_BzFbxG2za3bp5NRRRXJSw Вкатываемся в эпоху докера, микросервисов и адово кошерной сетевухи. last >>1245569 (OP) Пропущено 323 постов 21 с картинками. В тред Скрыть Пропущено 323 постов, 21 с картинками. Аноним 17/02/19 Вск 21:52:06 №1350016 >>1335987 Все три - это уже аналоги уже имеющегося софта, но на расте? Уходи, пожалуйста, потому что это даже не смешно. Аноним 17/02/19 Вск 22:22:49 №1350049 >>1336301 >Что мне блять остается еще? Пхп, 1С. Аноним 17/02/19 Вск 22:36:38 №1350072 >>1349440 Попробуй объяснить бизнесу, что критические по производительности сервисы следует переписать на go а лучше сразу на rust потому-что ваши рельсы вытягивают максимум 1000 rps и затраты на железо скоро будут выше затрат по миграции на гошечку SICP тред /sicp/ #5 Аноним 03/01/19 Чтв 05:13:45 №1320096 Ответ sicp.jpg (43Кб, 434x479) Продолжаем обсуждение лучшей книги всех времен и народов, а так же одноименных лекций. Приглашаются сюда как новички, ломающие над ней голову, так и опытные ребята, прошедшие ее всю (или большую ее часть). Где скачать SICP? На русском: http://newstar.rinet.ru/~goga/sicp/sicp.pdf ориджинал: http://web.mit.edu/alexmv/6.037/sicp.pdf https://github.com/sarabander/sicp-pdf/raw/master/sicp.pdf Где я могу писать свой код, для выполнения заданий? Онлайн редактор, с поддержкой Scheme: https://repl.it/languages/scheme IDE для racket подобных языков(но есть и поддержка Scheme, но её нужно включить) - https://racket-lang.org/ Где посмотреть ответы на задачи? http://community.schemewiki.org/?SICP-Solutions https://github.com/qiao/sicp-solutions https://wizardbook.wordpress.com/solutions-index/ Где посмотреть видео про книгу? https://www.youtube.com/watch?v=a0YrCABCOEY Предыдущий тред https://2ch.hk/pr/res/1271806.html Пропущено 233 постов 28 с картинками. В тред Скрыть Пропущено 233 постов, 28 с картинками. Аноним 17/02/19 Вск 20:39:02 №1349959 >>1321260 Ууу, блядь, пиздато прорекламировал, ну ладно, видать нихуя не туфта, в отпуске засяду, хуле. Лисп, говорите, таак, падажжи ёбана Аноним 17/02/19 Вск 21:47:21 №1350011 >>1349956 Да, рили. Книга была написана за 15 лет до появления википедии, скорее вики пересказывает её. Аноним 17/02/19 Вск 22:26:36 №1350055 >>1349289 Прикольно, но все равно не очень понятно зачем нужно, есть же кложа >>1349956 >сикп >замануха с пересказом вики Лол, ну ты дал, братишка Вкатываюсь в кодинг /python/ Holly Morez # OP 31/01/19 Чтв 22:06:03 №1338855 Ответ image.png (653Кб, 910x673) image.png (1483Кб, 1430x1006) image.png (73Кб, 940x512) Йеп, амиго! Вкатываюсь во фриланс уже 3 года... Как-то устал подзаебался учить теорию, поэтому пошел в ближайшую it-шарашкину-контору, где мне вытерли губы и послали нахуй осваивать ООП, Django и веб-серверы. Уже 2 месяца как пытаюсь сделать что-то годное, но пока нихуя не выходит. По сему ищу поучительные истории пользователей, которые смогли бы показать, что я не один такой долбаеб. В идеале найти python-коммьюнити, ибо одногруппники -- дно -- никто не хочет вкатываться. И вообще интересно мнение реально фрилансить на джанго +- верстка и мб настраивать бд. Тема вроде как интересная. Но движения очень медленные. Создал тред первый раз. Поддержите. Пропущено 28 постов 1 с картинками. В тред Скрыть Пропущено 28 постов, 1 с картинками. Аноним 13/02/19 Срд 10:24:05 №1346696 >>1346656 Есть норм гайд? Аноним 13/02/19 Срд 11:49:39 №1346750 >>1346652 при обновление пихона с 3.5 до 3.7 у тебя половина либ медью накроется, и Wsgi по другому придется подключать Аноним 17/02/19 Вск 22:21:34 №1350048 Посоветуйте годную, бесплатную IDE для питона. Некий аналог NetBeans для пыхи C++ №82 /cpp/ Аноним 05/02/19 Втр 19:45:01 №1342442 Ответ .png (33Кб, 225x225) Вместо шапки - https://github.com/sosachbot/cppthreadhat/wiki Ответы на все вопросы - http://en.cppreference.com/w/ http://www.cplusplus.com/reference/ Прошлый >>1336773 (OP) Пропущено 311 постов 30 с картинками. В тред Скрыть Пропущено 311 постов, 30 с картинками. Аноним 17/02/19 Вск 21:20:59 №1349983 >>1349976 нет, из соображений производительности в первую очередь ведь юникод они в ядро запиливали, надо было чтобы быстро работало потом удобней с двухбайтовой кодировкой работать самим программистам.. потом им не надо было ни жить ни быть чтобы была обратная совместимость с ascii кодировкjq как в utf8 сделано, так как в ядре уже была поддержка и широких кодировок для азиатских языков и других трюков, те в ядре винды не было такой жесткой привязки к asci как было в некоторых операционках юниксового семейства.. вообще, выбор представления юникода - это не холивар, это обычный инженерный выбор, одни представления удобней для одного, другие - для другого на rsdn были длинные обсуждения этого, и почти никто не обсирал выбора инженеров майкрософт Аноним 17/02/19 Вск 21:23:32 №1349985 >>1349983 >на rsdn были длинные обсуждения этого, и почти никто не обсирал выбора инженеров майкрософт Ещё бы на сайте чьё название каргокультирует MSDN обсирали Microsoft Аноним 17/02/19 Вск 22:05:09 №1350029 >>1343703 Ты все версии выбрал, что ли? Всегда было метров семьсот. The Ruby Programming Language /ruby/ Аноним 10/01/19 Чтв 17:47:12 №1324437 Ответ ruby.png (57Кб, 550x550) rails.png (30Кб, 400x400) taric.jpg (213Кб, 1410x1080) СЛОУНОВОСТИ Ruby 2.6 introduces an initial implementation of JIT (Just-in-time) compiler Ruby 2.5 has removed top level constant lookup Ruby 2.5 requires pp by default Ruby 2.5 added lazy proc allocation for block parameters Ruby 2.4 unifies Fixnum and Bignum into Integer Предыдущий тред: https://2ch.hk/pr/res/1272457.html ИЗУЧЕНИЕ ЯЗЫКА Q: C чего мне начать, чтобы стать рубистом? A: Отличным началом будет Programming Ruby (The Pragmatic Programmers Guide), читать Eloquent Ruby и The Well Grounded Rubyist после прочтения первой толку особо не даст, одни и те же вещи, дальше читаем Ruby Way, затем познаем метапрограммирование с Metaprogramming Ruby. А дальше открываем Ruby cookbook 2015 года, Пишем свой код во время чтения. Q: Следующий уровень, продвинутые книги по руби: A: Confident Ruby by Avdi Grimm | Practical Object-Oriented Design in Ruby Refactoring Ruby Edition | Ruby Under a Microscope Q: Онлайн курсы чтобы попробовать/вкатиться: A: http://tryruby.org/levels/1/challenges/0/ | https://rubymonk.com/ http://www.codewars.com/?language=ruby | http://rubykoans.com Q: Какой gem посмотреть, чтобы понять, как писать код? A: Лучше всего посмотреть небольшие gem'ы вроде cancancan, pundit, camping. Еще можешь полистать на гитхабе гемы с нарастающей популярностю (там еще нет тысяч строк, и тебе будет легче понять): https://github.com/trending?l=ruby Q: Хорошие практики по руби и рельсам? A: Обязательно стайлгайды (как оформлять код): https://github.com/bbatsov/ruby-style-guide https://github.com/JuanitoFatas/fast-ruby https://github.com/bbatsov/rails-style-guide Руководства "для чайников": https://www.railstutorial.org/book [en] http://www.theodinproject.com/ruby-on-rails [en] | http://codenamecrud.ru/ [ru] Q: Документация по стандартным библиотекам руби и рельс: A: http://ruby-doc.org/ | http://api.rubyonrails.org http://guides.rubyonrails.org | http://ruby.railstutorial.org Q: Можно ли на руби писать нативные GUI, мобильные приложения, игры? A: Нет. Q: Что ещё изучить? A: Английский, git, linux. Паттерны. Один из часто используемых - Service Object. СРЕДА РАЗРАБОТКИ Q: Как установить разные версии рубей? A: https://rvm.io | https://github.com/sstephenson/rbenv Пропущено 244 постов 13 с картинками. В тред Скрыть Пропущено 244 постов, 13 с картинками. Аноним 17/02/19 Вск 20:26:05 №1349946 i4pkzbwmxcpz.jpg (1676Кб, 4032x3024) >>1349167 > react или vue Нинужное говноедство на которое убивается немеряно времени, а профита против turbolinks + rjs - чуть более чем нихуя. Почитать на тему: https://medium.com/@jmanrubia/escaping-the-spa-rabbit-hole-with-turbolinks-903f942bf52c >>1349212 >Только сделай f.select(:tour_id, Tour.limit(100).pluck(:title, :id), :prompt => 'Select') Вызов модели из вью - мы вам перезвоним. >>1349708 Двачую. А делать надо было вот что. Для этой странички написать ЖС, в нём навесить обработчик onChange для селекта, который будет менять form action на "/tours/" + select.value +"/statistics". Всё. Если пойти чуть дальше, то этот же обработчик может заодно и сабмитить форму, тогда можно убрать нинужную кнопку. Да и форму можно убрать, и делать переход с помощью window.location. Самое простое = самое лучшее. Аноним 17/02/19 Вск 21:28:44 №1349991 Алсо, каким надо быть уёбком, чтобы человеку, которому нужон однострочник на JS, советовать выучить react. Аноним 17/02/19 Вск 21:40:01 №1350004 >>1349946 >Нинужное говноедство на которое убивается немеряно времени, а профита против turbolinks + rjs - чуть более чем нихуя. Скажу честно, статью не читал, слишком длинная. Если ты тратишь с vue больше времени, чем с rjs, то ты что-то делаешь не так или у тебя просто еще недостаточно опыта работы с ним. Я разрабатывал всякие сложные формочки и прочие сильно интерактивные штуки еще во времена тотального доминирования jquery и помню как даже первый angular был просто божественным откровением. Наконец-то не надо было вешать десятки обработчиков всяких onclick и onchange и 100% обосраться в процессе в каком-нибудь селекторе, или забыть обновить доступные значения в селекте, или забыть скрыть часть полей, или еще миллион других вариантов оставить интерфейс в неправильном виде удачи все это сделать с помощью rjs, кстати. С ангуляром (а сейчас с react/vue) можно было просто менять стейт в js и он сам правильно отображался на интерфейс. Это реально был переход от императивного к декларативному программированию на фронтенде. >>1349991 В данном случае это, конечно, оверкилл, но это учебный проект и в них оверкиллы это норма и даже необходимость. В будущем, когда ему понадобится сделать и правда что-то сложное на фронтенде, он уже будет знаком с подходящими для этого инструментами. ИТТ продолжаем разрабатывать под лучшую мобильную Аноним 30/01/19 Срд 19:03:02 №1338060 Ответ image.png (669Кб, 1024x1024) image.png (156Кб, 474x316) image.png (666Кб, 960x639) ИТТ продолжаем разрабатывать под лучшую мобильную платформу, угощать пряниками токсичных и выяснять как с нуля вкатиться на мидл вакансию. >С чего вкатываться? Со swift book - книжка валяется в интернете. Стоит упомянуть про складчину иос господ - телега.ми/iOSBooks - валяется огромное количество книжек, хоть обмазывайся. Есть еще одна, из какого местного чатика https://drive.google.com/drive/folders/0B25xie8pit__amNPc1N6OXVFaEU - но там больше старых валяется. Единственный плюс так это обжс. >Не люблю читать книжки я долбаеб https://www.youtube.com/playlist?list=PL9lXw_XXeiWQGrY5dl0IjFI7tOw_nfI91 - лучшее что есть в тырнете. По видяшкам так же рекомендую: https://coursehunters.net/course/ios-12-i-swift-4-2-dlya-nachinayushchih-200-prakticheskih-tutorialov https://coursehunters.net/course/ios-12-i-swift-4-ot-novichka-do-professionala - перед стенфордскими курсами можно глянуть. Тоже найс. После окончания вышеописанного заебись будет построить свое приложение. Например очередное Weather или же ImageGallery или что-нибудь свое. https://marcosantadev.com/coredata_crud_concurrency_swift_1/ - хорошая серия статей по работе с CoreData По многопоточке есть охренные рускоязычные статьи, автор разбирает практически ВСЕ, чего даже не найдешь на медиуме https://habr.com/ru/post/320152/ https://habr.com/ru/post/335756/ Полезные ресурсы: https://www.raywenderlich.com/ https://www.appcoda.com/ https://www.bignerdranch.com/books/ios-programming/ Видео для ленивых: https://www.udacity.com/courses/ios https://www.youtube.com/user/AlexSkutarenko https://developer.apple.com/videos/ Перевод документации базовой https://swiftbook.ru/content/ Материал на английском: Очень подробно все рассказывает и расписывает https://rutracker.org/forum/viewtopic.php?t=5445071 Devslopes. Начинал с них, рисуют приложения при тебе, особо не углубляются в детали, но как пример можно посмотреть. Сам к ним вернусь, как побольше поучу. https://coursehunters.net/course/udemy-ios11-swift4 ласт >>1311979 (OP) Пропущено 212 постов 21 с картинками. В тред Скрыть Пропущено 212 постов, 21 с картинками. Аноним 17/02/19 Вск 17:01:29 №1349684 >>1349566 >Почему нельзя начинать с малого. Рекомендую сначала у Рэя смотреть, там всегда все разжевано со ссылками на уроки попроще, если они нужны. https://www.raywenderlich.com/392-uicollectionview-custom-layout-tutorial-pinterest Аноним 17/02/19 Вск 21:32:46 №1349996 underthesilverl[...].jpg (165Кб, 1777x744) Ребят, а на каких ресурсах лучше искать работу, чтобы удаленно разрабатывать под лучшую мобильную ос? Аноним 17/02/19 Вск 21:39:26 №1350002 >>1349996 На МК, но шансы мизерные Доработанный аналог findface) Аноним 17/02/19 Вск 13:45:30 №1349496 Ответ B8DEA129-5F60-4[...].jpeg (196Кб, 1125x2060) https://findmevk.com оцените алкашня , годно ищет Пропущено 2 постов. В тред Скрыть Пропущено 2 постов. Аноним 17/02/19 Вск 19:33:11 №1349881 плохо работает Аноним 17/02/19 Вск 20:18:30 №1349939 >>1349868 чтоб базу фоток собирать с закрытых профилей очевидно же Аноним 17/02/19 Вск 21:15:37 №1349980 >>1349496 (OP) >Авторизация Ищи дурачков в другом месте Прикладного обучения тред Аноним 17/02/19 Вск 20:28:05 №1349948 Ответ а4535.jpg (531Кб, 3888x1944) Большая часть обучения программированию для нубов является хуетой, потому что не следуют главному приницпу - нуб должен учиться создавать прикладные программы. Изучение алгоритмов, чтение кнутов и прочие изъебства не следуют этому принципу вызывая обратный эффект. Нуб, устраивая себе мозгоеблю или создавая вещи ненужные и не интересные теряет мотивацию. В этом треде предлагаю кидать варианты прикладные задачи для начинающих. В тред Скрыть Аноним 17/02/19 Вск 21:04:59 №1349973 бамп Аноним 17/02/19 Вск 21:12:25 №1349977 Программирование это не твоё. Аноним 17/02/19 Вск 21:12:39 №1349978 >>1349948 (OP) Двачую. Нахуй эту теорию. Практика и только практика. Напиши свой Windows. Android Development thread /android/ Аноним 30/01/19 Срд 19:13:52 №1338069 Ответ image.png (634Кб, 1920x1080) image.png (338Кб, 480x481) Build an Androi[...].mp4 (1849Кб, 1280x720, 00:00:09) 8742984789.mp4 (1053Кб, 1280x720, 00:00:31) Android Development Thread Тред для тех, кто пытается вкатиться в андройд разработку или что-то похожее. По возможности стараемся угощать ньюфагов чаем и поливать друг друга радугой. > Хочу вкатиться в разработку под Android! С чего начать? С видеокурсов от Udacity. Они бесплатны и затрагивают основы разработки даже если не умеешь писать на Java. https://www.udacity.com/course/android-development-for-beginners--ud837 Для тех, кто не хочет учиться по юдасити существует скучный кат от гугла: http://developer.android.com/training/index.html Если имел опыт в програмаче, можешь посмотреть видосики отсюда https://web.stanford.edu/class/cs193a/videos.shtml Очень доходчиво и интересно Так же есть книга, которая затрагивает основы разработки и имеет 2-е издание с 2017 года: https://www.amazon.com/Head-First-Android-Development-Brain-Friendly/dp/1491974052 Большинство приложений написано на Java, необходимо понимать что ты пишешь, в уме достаточно знать базовый Core т.к. 90% времени придется тыкаться в Android SDK. Полезные обучалки от анона : https://habr.com/company/golovachcourses/blog/215275/ - смотри Головача если совсем даун и не шаришь нихера https://www.amazon.com/Head-First-Java-Kathy-Sierra/dp/0596009208 - книжка для ньюфагов. Хорошо заходит. https://www.amazon.com/Thinking-Java-4th-Bruce-Eckel/dp/0131872486 Неплохим вариантом для изучивших джава будет книга https://www.amazon.com/Effective-Java-3rd-Joshua-Bloch/dp/0134685997 Алсо можешь читануть паттерны, рано или поздно все равно базовое знание понадобиться https://www.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124 Существует два текстовых ресурса для закрепления андройда на русском. Первый - несмотря на старость описывает базовые вещи, на которых построены мощные либы, второй - продавшийся говноед с котиками http://startandroid.ru/ и http://developer.alexanderklimov.ru/android/ https://commonsware.com/Android/ - толстая книга для гиков, стандарт решений Так же можешь смотреть видосики от Mail.Ru https://habr.com/company/mailru/blog/345252/ https://github.com/ybereza/technotrack-resources - ресурсы к лекциям Или от Яндекса. В некоторых моментах спикеры рассказывают важные детали, которые кроются в мелочах: https://www.youtube.com/watch?v=5EvxWifIgro&list=PLQC2_0cDcSKBNCR8UWeElzCUuFkXASduz В дальнейшем потребуется базовое знание SQL, понимание XML и JSON. > Я прошел курсы Udasity, а дальше что? После прохождения курсов у тебя должно сложиться базовое представление о создании приложения; жизненные циклы Activity/Fragments, AsynsTask, Http, Json, SQLite. Дальше закрепляешь знания путем просмотра видосов выше + Написание парочку приложений на свой вкус. Так же стоит уделить внимание BroadcastReceiver, IntentService, поиграться с Loader's, хендлерами, Contest providers и прочее, построить очередной Weather or ToDo must have list. >Не могу разобраться в потоках. Хендлеры, хуендлеры хуйтаски. Как быть? http://codetheory.in/android-handlers-runnables-loopers-messagequeue-handlerthread/ - Хорошая статья, которая экономит время. После нее можно сразу переходить и тыкаться в хендлерах. https://blog.mindorks.com/android-core-looper-handler-and-handlerthread-bd54d69fe91a - еще одна от миндоркса. https://blog.nikitaog.me/2014/10/11/android-looper-handler-handlerthread-i/ - еще одна интересная. >Хочу изучать популярные либы и не быть говноедом! Если ты сразу после курсов переползаешь сюда - будь готов, что ты не будешь знать как это делается под капотом, и в конце концов соснешь когда-нибудь. Retrofit - стандарт для взаимодействия с сетью. Она идет в комплекте с okhttp3, начинаешь с последней, а потом переползаешь на сам ретрофит. Так же для справки можешь гуглить volley. RxJava - одно из решений для выполнения кода в бекраунде. Ниже ссылочки, смотри и поглощай. https://www.youtube.com/watch?v=YPf6AYDaYf8- rxJava идея с нуля https://www.youtube.com/watch?v=3jdvLrYZfB4&t= https://www.youtube.com/watch?v=0IKHxjkgop4 https://coursehunters.net/course/master-klass-po-rxjava-s-mvvm-dlya-razrabotki-pod-android https://www.youtube.com/watch?v=t34AQlblSeE - retrofit Неплохо было бы и изучить MVP. Вообще его следует изучать сразу. Видишь MVP - сразу пиши нормальный код. Никаких нахуй асинтасков внутри активити. Для самообразования можно написать его голыми руками или прогуглить, как это делается. https://github.com/ArturVasilov/AndroidSchool - здесь рассматривается архитектура, и как ее ели с 2011 года. MVP: https://javarush.ru/groups/posts/505-mvp-v-android-dlja-samihkh-malenjhkikh - для понимания https://github.com/Arello-Mobile/Moxy - плюшка для поворотов экрана https://github.com/sockeqwe/mosby - англоязычная плюшка MVVM - костыли от гугла: Для нормального понимания желательно знать AAC. https://startandroid.ru/ru/courses/architecture-components.html - свежие уроки от Димона https://proandroiddev.com/the-missing-google-sample-of-android-architecture-components-guide-c7d6e7306b8f - для продвинутых Пример MVVM https://github.com/ericmaxwell2003/MvvmTipCalculator Вышеописанные два подхода - всего лишь обертки, чтобы вынести логику из views. Для более углубленно изучения рекомендуется почитать this: https://habr.com/company/mobileup/blog/335382/ Пример на котлине: https://github.com/hitherejoe/GithubTrending > Хочу анимировать мои говноподелки! https://www.youtube.com/watch?v=dzB-1VlHJW8 Онли теория. Первые двадцать минут покрывают больше половины статей, которые можно найти на медиуме и т.д. Здесь побольше практики на любой вкус: https://labs.ribot.co.uk/exploring-meaningful-motion-on-android-1cd95a4bc61d Так же можно подробно почитать про смены сцен: https://blog.prototypr.io/applying-meaningful-motion-on-android-a271a873bd78 > Я заебался. Почему мои приложения постоянно падают в проде и как эту хуйню фиксить? Для этого придумали тесты. Для общего понимания читаешь короткую статью https://medium.com/android-testing-daily/the-3-tiers-of-the-android-test-pyramid-c1211b359acd > Не хочу писать на Java! - Kotlin — JVM-совместимый язык от JetBrains. Есть лямбды, стримы и делегаты. С 17.05.2017 поддерживается официально. https://www.youtube.com/watch?v=-H98SWHayL4 - свежие лекции на русском, объяснение корутин прост бжствно https://www.amazon.com/Kotlin-Action-Dmitry-Jemerov/dp/1617293296 - библия https://kupdf.com/download/kotlin-for-android-developers_59a05e2ddc0d60992a18496b_pdf - Kotlin for Android https://www.udacity.com/course/kotlin-for-android-developers--ud888 - курсы Udacity > Есть что-то кроме нативных приложений на Java/Kotlin? - Flutter - кросс-платформенный фреймворк от Google. Js с аля строгой типизацией. Если совсем поехавший можешь начинать с него. https://flutter.io/docs/ - документация https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905 - курсы от Udacity Остальные куски: ReactNative — мочаскрипт во всей красе. - PhoneGap/Ionic/Titanium — имя им мочаскрипт-младшие, принципы у них разные, кроссплатформенность одного кода. Популярность у них разная как и размер комьюнити. Вопросы по ним — в js-тред. - Qt — кросс-платформенный фреймворк на C++. Используется в основном для игры и для приложений с высокими требованиями к производительности (обработка изображений, звука, ГИС-системы). Спрашивать в C++ треде. - Xamarin — кросс-платформенный фреймворк на C#. Представляет из себя обёртку над Android API. Куплено Microsoft. Теперь есть бесплатная версия. Спрашивать в C#-треде. - BugVM — кросс-платформенный фреймворк, написанный на Java. Форк невинно убиенного RoboVM. > Хочу писать игры! LibGDX - слишком медленная параша для больших проектов, но познакомится можешь. Unity - для адекватных, Corona SDK, LOVE, Defold и другие. Спрашивать в /gd/. > Что нужно, чтобы взяли джуниором? Что учить в первую очередь? Нужно хорошее знание Java, понимание базовых принципов Android (жизненный цикл activity/fragment, что такое Context, intents, services, UI thread, support library и ее версии (уже androidx), shared preferences, SQLite, Handlers, Executors, Content-Providers), знание популярных библиотек типа Retrofit + Glide/Picasso + RxJava2 + Dagger2(по обстоятельствам) + гугловские поделки jetpack, понимания СОЛИД и других паттернов проектирования. Базовое понимание что вообще такое Gradle. И хотя бы несколько готовых приложений. Полезные ссылки: https://coursehunters.net/mobile-development - очень много уроков и не только по ведройду. Почекай и посмотри, вдруг зайдет. https://www.youtube.com/channel/UCSwuCetC3YlO1Y7bqVW5GHg - канадский челик, поясняет за архитектуру и отвечает на разные вопросы на стримах. https://github.com/toddmotto/public-apis - бесплатные API для создания приложений. https://github.com/AlexeyZatsepin/Android-ORM-benchmark - бенчмарки на вопросы о том, какую БД выбирать. https://androiddev.apptractor.ru/category/podcast/page/0/ - подкасты ведройд разрабов которые шарят про все и вся Пропущено 376 постов 37 с картинками. В тред Скрыть Пропущено 376 постов, 37 с картинками. Аноним 17/02/19 Вск 18:00:29 №1349753 >>1349751 Гугли android NDK и AOSP Аноним 17/02/19 Вск 18:01:52 №1349755 >>1349745 > Anko Нинужно. Аноним 17/02/19 Вск 20:05:01 №1349924 >>1349751 Взаимодействие с++ и жабы максимально уебищно сделано. Страдай. Памагити придумать алгоритм Аноним 17/02/19 Вск 17:04:30 №1349689 Ответ 14118600535850.jpg (77Кб, 612x612) Пишу автопилот для самолета и не могу придумать алгоритм вычисления углового ускорения. Автопилот должен сначала вести самолет к цели, потом кружить вокруг цели на заданном расстоянии, а потом возвращать самолет на базу. Дело происходит в двумерном пространстве. Линейная скорость на всем пути константа, менять можно только угловую, да и то через ускорение. У меня есть координаты самолета, есть его проекции скорости на обе оси, есть угол поворота оси самолета, есть координаты цели. Пропущено 8 постов 1 с картинками. В тред Скрыть Пропущено 8 постов, 1 с картинками. Аноним 17/02/19 Вск 18:25:49 №1349782 >>1349764 Перевел направляющие косинусы в радианные углы, получилось что у целей (10, 10) и (10, -10) одинаковый угол наклона к оси, чет херня какая то, второй угол должен быть равен 2*пи - первый угол Аноним 17/02/19 Вск 18:29:38 №1349786 >>1349775 >как этот atan2 работает вообще Возращает угол (в радианах) между заданым вектором (с началом в центре координат) и осью х. Аноним 17/02/19 Вск 19:23:55 №1349864 >>1349744 можно пожалуйста трек Каталог Создать тред Создать тред [0] 1 2 3 4 5 6 7 8 Следующая Следующая Каталог Тематика [au / bi / biz / bo / c / em / fa / fiz / fl / ftb / hh / hi / me / mg / mlp / mo / mov / mu / ne / psy / re / sci / sf / sn / sp / spc / tv / un / w / wh / wm / wp / zog] Творчество [de / di / diy / mus / pa / p / wrk / trv] Техника и софт [gd / hw / mobi / pr / ra / s / t / web] Игры [bg / cg / ruvn / tes / v / vg / wr] Японская культура [a / fd / ja / ma / vn] Разное [d / b / o / soc / media / r / abu / rf] Взрослым [fg / fur / gg / ga / vape / h / ho / hc / e / fet / sex / fag] Политика [int / po / news] [ Прочие доски ] [Скорость борды: 46 п./час] Все права и копирайты на этой странице принадлежат правообладателям. За любую размещенную информацию несет личную ответственность постер (лицо, загрузившее эту информацию). Все комментарии принадлежат лицам, отправившим их. Если вы обнаружили информацию, размещённую против правил, пожалуйста, сообщите нам об этом. Зеркала Двача: 2ch.hk, 2ch.pm, 2ch.re, 2ch.tf, 2ch.wf, 2ch.yt, 2-ch.so Настройки X Ответить в тред X 15000 [S] Макс объем: 40Mб, макс кол-во файлов: 4 Кликни/брось файл/ctrl-v Отправка поста vk.com/ru2ch - оФФициальная группа VK [S] 15000 Sage Ватермарка Мод тег ОП треда Макс объем: 40Mб, макс кол-во файлов: 4 Кликни/Брось файл/ctrl-v • Покупка пасскода позволяет обходить капчу. [Узнать больше] • Перед отправкой сообщения прочтите FAQ раздела и правила раздела. • vk.com/ru2ch - оФФициальная группа VK • dvachannel - оФФициальная конфа Стикеры X Топ тредов Избранное Автоматически следить за: своими постами своим тредом